<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: fa6831306ac029c418e835168009d00483f0ac82 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.dotnet" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude">
 <titleabbrev>DOTNET</titleabbrev>
 <title>La classe DOTNET</title>
 <partintro>

<!-- {{{ DOTNET intro -->
  <section xml:id="dotnet.intro">
   &reftitle.intro;
   <para>
    La classe DOTNET vous autorise à instancier une classe depuis un ensemble
    .NET et d'appeler ses propriétés ainsi qu'à accéder à ses propriétés.
   </para>
   <note>
    <para>
     Vous devez installer le moteur d'exécution .Net sur votre serveur web pour
     tirer avantage de cette fonctionalité.
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="dotnet.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>DOTNET</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>DOTNET</classname>
     </ooclass>

    <ooclass>
     <modifier>extends</modifier>
     <classname>VARIANT</classname>
    </ooclass>

    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.dotnet')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="class.dotnet.overloadedmethods">
   <title>Méthodes surchargées</title>
   <para>
    L'objet retourné est un objet surchargé, ceci signifie que PHP ne voit pas
    les méthodes fixé comme il le fait avec les classes normales ; à la place
    tout accès de propriété ou méthode sont passés à travers COM et à partir de
    là à DOTNET. Dans d'autres mots, l'objet .Net est mappé via la couche
    d'interopérabilité COM fournie par le moteur d'exécution .Net.
   </para>
   <para>
    Une fois que vous avez crée un objet DONET, PHP le traite de façon identique
    à n'importe quel autre objet COM ; les mêmes règles s'appliquent.
   </para>
  </section>

  <section xml:id="class.dotnet.examples">
   <title>Exemples DOTNET</title>
   <para>
    <example xml:id="example.dotnet">
     <title>Exemple DOTNET</title>
     <programlisting role="php">
<![CDATA[
<?php
$stack = new DOTNET("mscorlib", "System.Collections.Stack");
$stack->Push(".Net");
$stack->Push("Hello ");
echo $stack->Pop() . $stack->Pop();
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>

 </partintro>

 &reference.com.entities.dotnet;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
