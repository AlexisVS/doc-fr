<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: ca5c477437fcb21680408bf7e0cc0424853e7907 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysqli-result.fetch-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_assoc</refname>
  <refname>mysqli_fetch_assoc</refname>
  <refpurpose>Récupère une ligne de résultat sous forme de tableau associatif</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>array</type><methodname>mysqli_result::fetch_assoc</methodname>
   <void />
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>array</type><methodname>mysqli_fetch_assoc</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne un tableau associatif qui correspond à la ligne 
   récupérée ou &null; s'il n'y a plus de ligne.
  </para>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif de valeur représentant la prochaine
   ligne dans le jeu de résultats représenté par le paramètre
   <parameter>result</parameter>, où chaque clé du
   tableau représente le nom d'une colonne du résultat ou
   &null; s'il n'y a plus de ligne dans le jeu de résultats.
  </para>
  <para>
   Si deux ou plus colonnes dans le jeu de résultat ont le même
   nom, le tableau associatif retourné par la fonction
   <function>mysqli_fetch_assoc</function> ne contiendra que
   la valeur de la dernière colonne de ce nom. Si vous devez travailler
   avec des jeux de résultats ayant cette particularité, la fonction 
   <function>mysqli_fetch_row</function> qui retourne un tableau indexé
   doit être utilisée à la place.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple <methodname>mysqli_result::fetch_assoc</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID DESC";

$result = $mysqli->query($query);

/* fetch associative array */
while ($row = $result->fetch_assoc()) {
    printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);
}
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = mysqli_connect("localhost", "my_user", "my_password", "world");

$query = "SELECT Name, CountryCode FROM City ORDER BY ID DESC";

$result = mysqli_query($mysqli, $query);

/* fetch associative array */
while ($row = mysqli_fetch_assoc($result)) {
    printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);
}
]]>
   </programlisting>
   &examples.outputs.similar;
   <screen>
<![CDATA[
Pueblo (USA)
Arvada (USA)
Cape Coral (USA)
Green Bay (USA)
Santa Clara (USA)
]]>
   </screen>
  </example>
  <example xml:id="mysqli-result.example.iterator">
   <title>Comparaison de l'usage de <classname>mysqli_result</classname> <classname>iterator</classname> et <methodname>mysqli_result::fetch_assoc</methodname></title>
   <para>
    <classname>mysqli_result</classname> peut être itéré en utilisant un &foreach;.
    Le jeu de résultats sera toujours itéré à partir de la première ligne,
    quel que soit la position actuelle.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

mysqli_report(MYSQLI_REPORT_ERROR | MYSQLI_REPORT_STRICT);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

$query = 'SELECT Name, CountryCode FROM City ORDER BY ID DESC';

// Utilise un itérateur
$result = $mysqli->query($query);
foreach ($result as $row) {
    printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);
}

echo "\n==================\n";

// N'utilise pas d'itérateur
$result = $mysqli->query($query);
while ($row = $result->fetch_assoc()) {
    printf("%s (%s)\n", $row["Name"], $row["CountryCode"]);
}
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Pueblo (USA)
Arvada (USA)
Cape Coral (USA)
Green Bay (USA)
Santa Clara (USA)

==================
Pueblo (USA)
Arvada (USA)
Cape Coral (USA)
Green Bay (USA)
Santa Clara (USA)

]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_array</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
