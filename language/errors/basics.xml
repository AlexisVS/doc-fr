<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b7a780f8e762e290552b9f79d346f2bcbc272e0c Maintainer: Vicla Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="language.errors.basics" xmlns="http://docbook.org/ns/docbook">
 <title>Bases</title>

 <para>
  Le PHP rapporte des erreurs en reponse à un certaines conditions d'erreurs internes.
  Elles peuvent être utilisées pour signaler des causes d'erreur différentes, et peuvent être affichées à l'écran ou/et enregistrées dans l'historique
 </para>

 <para>
  Chaque erreur générée par PHP a un type. Une <link linkend="errorfunc.constants">liste de ces types</link>, ainsi qu'une brève description et leur cause possible est disponible.
 </para>

 <sect2 xml:id="language.errors.basics.handling">
  <title>Gestion des erreurs en PHP</title>

  <para>
   Si aucun gestionnaire d'erreur n'est defini, le PHP gèrera les erreurs selon sa configuration.
   La directive <link linkend="ini.error-reporting"><parameter>error_reporting</parameter></link> du fichier php.ini ou la fonction <function>error_reporting</function> appelée au moment de l'execution du script determineront les erreurs qui seront rapportées et les erreurs qui seront ignorées.
   Il toutefois est fortement recommandé de configurer la directive, car des erreurs peuvent se produires avant le lancement du script.
  </para>

  <para>
   Dans un environnement de développement, la directive <link linkend="ini.error-reporting"><parameter>error_reporting</parameter></link> devrait toujours être configurée avec <constant>E_ALL</constant>, afin que chaque erreur PHP puisse être détéctée et corrigée.
   Dans un environnement de production, il est possible de configurer la directive avec un niveau moins verbeux tel que <code>E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED</code>, mais généralement, la directive peut etre laissée à <constant>E_ALL</constant> pour signaler les problèmes éventuels le plus tôt possible. 
  </para>

  <para>
   Deux autres directives du fichier php.ini determinent comment le PHP traite ces erreurs.
   <link linkend="ini.display-errors"><parameter>display_errors</parameter></link> détermine si le message d'erreur est affiché sur la sortie du script. 
   Elle devrait toujours être désactivée dans un environnement de production, car le message d'erreur peut contenir des informations confidentielles, comme les mots de passe de base de données. 
   Mais, cette directive peut être activée dans un environnement de developpement, car elle permet un affichage immédiat des erreurs 
  </para>

  <para>
   En plus d'afficher les erreurs, le PHP peut enregistrer le message d'erreur quand la directive <link linkend="ini.log-errors"><parameter>log_errors</parameter></link> est activée.
   Toutes les erreurs seront alors enregistrées dans le gestionnaire d'erreur ou le fichier défini par <link linkend="ini.error-log"><parameter>error_log</parameter></link>.
   Ceci est très utile dans un environnement de production, car les erreurs se produisant seront enregistrées, et des rapports pourront être générés à partir de ces fichiers.
  </para>
 </sect2>

 <sect2 xml:id="language.errors.basics.user">
  <title>User error handlers</title>

  <para>
   Si le gestionnaire d'erreur de PHP par defaut ne convient pas, beaucoup d'erreurs peuvent aussi être gérées par une fonction utilisateur en la définisant avec <function>set_error_handler</function>.
   Bien que certains types d'erreur ne puissent pas être gérés de cette manière, ceux qui le peuvent seront entièrement gérées par le script utilisateur: par exemple, on pourra afficher une page d'erreur personnalisée et envoyer un rapport par email plutôt que l'enregistrer dans un fichier.
  </para>
 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

